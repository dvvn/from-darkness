#include "C_TEBSPDecal.h"

#include "cheat/netvars/netvars.h"

using namespace cheat;
using namespace csgo;

utl::Vector& C_TEBSPDecal::m_vecOrigin( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(utl::Vector*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBSPDecal.m_vecOrigin");
	auto addr = utl::address(this).add(offset);
	return addr.ref<utl::Vector>( );
#endif
}
int32_t& C_TEBSPDecal::m_nEntity( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(int32_t*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBSPDecal.m_nEntity");
	auto addr = utl::address(this).add(offset);
	return addr.ref<int32_t>( );
#endif
}
int32_t& C_TEBSPDecal::m_nIndex( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(int32_t*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBSPDecal.m_nIndex");
	auto addr = utl::address(this).add(offset);
	return addr.ref<int32_t>( );
#endif
}
