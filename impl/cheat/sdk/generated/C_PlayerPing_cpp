#include "C_PlayerPing.h"

#include "cheat/core/netvars.h"

using namespace cheat;
using namespace csgo;

int32_t& C_PlayerPing::m_hPlayer( )
{
	static const auto offset = netvars::get_ptr( )->at("C_PlayerPing.m_hPlayer");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<int32_t>( );
}
int32_t& C_PlayerPing::m_hPingedEntity( )
{
	static const auto offset = netvars::get_ptr( )->at("C_PlayerPing.m_hPingedEntity");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<int32_t>( );
}
int32_t& C_PlayerPing::m_iType( )
{
	static const auto offset = netvars::get_ptr( )->at("C_PlayerPing.m_iType");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<int32_t>( );
}
bool& C_PlayerPing::m_bUrgent( )
{
	static const auto offset = netvars::get_ptr( )->at("C_PlayerPing.m_bUrgent");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<bool>( );
}
char* C_PlayerPing::m_szPlaceName( )
{
	static const auto offset = netvars::get_ptr( )->at("C_PlayerPing.m_szPlaceName");
	auto addr = utl::mem::address(this).add(offset);
	return addr.raw<char>( );
}
