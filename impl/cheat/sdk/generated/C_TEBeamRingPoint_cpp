#include "C_TEBeamRingPoint.h"
#include "cheat/netvars/config.h"
#ifndef CHEAT_NETVARS_UPDATING
#include "cheat/netvars/netvars.h"
#include <nstd/address.h>
#endif

#include "cheat/sdk/Vector.hpp"

using namespace cheat::csgo;

cheat::csgo::Vector& C_TEBeamRingPoint::m_vecCenter( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(cheat::csgo::Vector*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint", "m_vecCenter");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
#endif
}
float& C_TEBeamRingPoint::m_flStartRadius( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(float*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint", "m_flStartRadius");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
#endif
}
float& C_TEBeamRingPoint::m_flEndRadius( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(float*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint", "m_flEndRadius");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
#endif
}
