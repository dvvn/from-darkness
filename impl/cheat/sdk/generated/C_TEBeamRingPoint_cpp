#include "C_TEBeamRingPoint.h"

#include "cheat/netvars/netvars.h"

using namespace cheat;
using namespace csgo;

utl::Vector& C_TEBeamRingPoint::m_vecCenter( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(utl::Vector*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint.m_vecCenter");
	auto addr = utl::address(this).add(offset);
	return addr.ref<utl::Vector>( );
#endif
}
float& C_TEBeamRingPoint::m_flStartRadius( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(float*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint.m_flStartRadius");
	auto addr = utl::address(this).add(offset);
	return addr.ref<float>( );
#endif
}
float& C_TEBeamRingPoint::m_flEndRadius( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(float*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_TEBeamRingPoint.m_flEndRadius");
	auto addr = utl::address(this).add(offset);
	return addr.ref<float>( );
#endif
}
