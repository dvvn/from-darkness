utl::array<int32_t, 32>& m_chAreaBits( );
utl::array<int32_t, 24>& m_chAreaPortalBits( );
int32_t& m_iHideHUD( );
float& m_flFOVRate( );
bool& m_bDucked( );
bool& m_bDucking( );
float& m_flLastDuckTime( );
bool& m_bInDuckJump( );
int32_t& m_nDuckTimeMsecs( );
int32_t& m_nDuckJumpTimeMsecs( );
int32_t& m_nJumpTimeMsecs( );
float& m_flFallVelocity( );
utl::Vector& m_viewPunchAngle( );
utl::Vector& m_aimPunchAngle( );
utl::Vector& m_aimPunchAngleVel( );
bool& m_bDrawViewmodel( );
bool& m_bWearingSuit( );
bool& m_bPoisoned( );
float& m_flStepSize( );
bool& m_bAllowAutoMovement( );
utl::Vector& m_vecViewOffset( );
float& m_flFriction( );
int32_t& m_fOnTarget( );
int32_t& m_nTickBase( );
int32_t& m_nNextThinkTick( );
CBaseHandle& m_hLastWeapon( );
utl::Vector& m_vecVelocity( );
utl::Vector& m_vecBaseVelocity( );
CBaseHandle& m_hConstraintEntity( );
utl::Vector& m_vecConstraintCenter( );
float& m_flConstraintRadius( );
float& m_flConstraintWidth( );
float& m_flConstraintSpeedFactor( );
bool& m_bConstraintPastRadius( );
float& m_flDeathTime( );
float& m_flNextDecalTime( );
float& m_fForceTeam( );
float& m_flLaggedMovementValue( );
CBaseHandle& m_hTonemapController( );
int32_t& deadflag( );
int32_t& m_iFOV( );
int32_t& m_iFOVStart( );
float& m_flFOVTime( );
int32_t& m_iDefaultFOV( );
CBaseHandle& m_hZoomOwner( );
int32_t& m_afPhysicsFlags( );
CBaseHandle& m_hVehicle( );
CBaseHandle& m_hUseEntity( );
CBaseHandle& m_hGroundEntity( );
int32_t& m_iHealth( );
int32_t& m_lifeState( );
utl::array<int32_t, 32>& m_iAmmo( );
int32_t& m_iBonusProgress( );
int32_t& m_iBonusChallenge( );
float& m_flMaxspeed( );
int32_t& m_fFlags( );
int32_t& m_iObserverMode( );
bool& m_bActiveCameraMan( );
bool& m_bCameraManXRay( );
bool& m_bCameraManOverview( );
bool& m_bCameraManScoreBoard( );
int32_t& m_uCameraManGraphs( );
int32_t& m_iDeathPostEffect( );
CBaseHandle& m_hObserverTarget( );
utl::array<CBaseHandle, 3>& m_hViewModel( );
int32_t& m_iCoachingTeam( );
char* m_szLastPlaceName( );
utl::Vector& m_vecLadderNormal( );
int32_t& m_ladderSurfaceProps( );
int32_t& m_ubEFNoInterpParity( );
CBaseHandle& m_hPostProcessCtrl( );
CBaseHandle& m_hColorCorrectionCtrl( );
int32_t& m_vphysicsCollisionState( );
CBaseHandle& m_hViewEntity( );
bool& m_bShouldDrawPlayerWhileUsingViewEntity( );
float& m_flDuckAmount( );
float& m_flDuckSpeed( );
int32_t& m_nWaterLevel( );
