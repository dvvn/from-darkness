#include "C_FuncLadder.h"

#include "cheat/core/netvars.h"

using namespace cheat;
using namespace csgo;

utl::Vector& C_FuncLadder::m_vecPlayerMountPositionTop( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncLadder.m_vecPlayerMountPositionTop");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<utl::Vector>( );
}
utl::Vector& C_FuncLadder::m_vecPlayerMountPositionBottom( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncLadder.m_vecPlayerMountPositionBottom");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<utl::Vector>( );
}
utl::Vector& C_FuncLadder::m_vecLadderDir( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncLadder.m_vecLadderDir");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<utl::Vector>( );
}
bool& C_FuncLadder::m_bFakeLadder( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncLadder.m_bFakeLadder");
	auto addr = utl::mem::address(this).add(offset);
	return addr.ref<bool>( );
}
