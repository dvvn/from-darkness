#include "C_BumpMineProjectile.h"
#include "cheat/netvars/config.h"
#ifndef CHEAT_NETVARS_UPDATING
#include "cheat/netvars/netvars.h"
#include <nstd/address.h>
#endif

#include "cheat/sdk/Vector.hpp"

using namespace cheat::csgo;

bool& C_BumpMineProjectile::m_bArmed( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(bool*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BumpMineProjectile", "m_bArmed");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<bool>( );
#endif
}
int& C_BumpMineProjectile::m_nParentBoneIndex( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(int*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BumpMineProjectile", "m_nParentBoneIndex");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<int>( );
#endif
}
cheat::csgo::Vector& C_BumpMineProjectile::m_vecParentBonePos( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(cheat::csgo::Vector*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BumpMineProjectile", "m_vecParentBonePos");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
#endif
}
