#include "C_BaseFlex.h"

using namespace cheat;
using namespace csgo;

int32_t& C_BaseFlex::m_blinktoggle( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(int32_t*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BaseFlex", "m_blinktoggle");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<int32_t>( );
#endif
}
std::array<float, 96>& C_BaseFlex::m_flexWeight( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(std::array<float, 96>*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BaseFlex", "m_flexWeight");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<std::array<float, 96>>( );
#endif
}
Vector& C_BaseFlex::m_viewtarget( )
{
#ifdef CHEAT_NETVARS_UPDATING
	return *(Vector*)nullptr;
#else
	static const auto offset = netvars::get_ptr( )->at("C_BaseFlex", "m_viewtarget");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<Vector>( );
#endif
}
