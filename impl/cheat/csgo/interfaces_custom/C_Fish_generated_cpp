cheat::csgo::Vector& C_Fish::m_poolOrigin( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_poolOrigin");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& C_Fish::m_x( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_x");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& C_Fish::m_y( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_y");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& C_Fish::m_z( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_z");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& C_Fish::m_angle( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_angle");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& C_Fish::m_nModelIndex( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_nModelIndex");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& C_Fish::m_lifeState( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_lifeState");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& C_Fish::m_waterLevel( )
{
	static const auto offset = cheat::get_netvar_offset("C_Fish", "m_waterLevel");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

