int& C_TEBeamEntPoint::m_nStartEntity( )
{
	static const auto offset = cheat::get_netvar_offset("C_TEBeamEntPoint", "m_nStartEntity");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& C_TEBeamEntPoint::m_nEndEntity( )
{
	static const auto offset = cheat::get_netvar_offset("C_TEBeamEntPoint", "m_nEndEntity");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

cheat::csgo::Vector& C_TEBeamEntPoint::m_vecStartPoint( )
{
	static const auto offset = cheat::get_netvar_offset("C_TEBeamEntPoint", "m_vecStartPoint");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

cheat::csgo::Vector& C_TEBeamEntPoint::m_vecEndPoint( )
{
	static const auto offset = cheat::get_netvar_offset("C_TEBeamEntPoint", "m_vecEndPoint");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

