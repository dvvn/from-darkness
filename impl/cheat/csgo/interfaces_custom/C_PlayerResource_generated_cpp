std::array<int, 65>& C_PlayerResource::m_iPing( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iPing");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iKills( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iKills");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iAssists( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iAssists");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iDeaths( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iDeaths");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_bConnected( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_bConnected");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iTeam( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iTeam");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iPendingTeam( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iPendingTeam");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_bAlive( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_bAlive");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iHealth( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iHealth");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

std::array<int, 65>& C_PlayerResource::m_iCoachingTeam( )
{
	static const auto offset = cheat::get_netvar_offset("C_PlayerResource", "m_iCoachingTeam");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

