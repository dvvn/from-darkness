int& _ST_m_Attributes_32::m_iAttributeDefinitionIndex( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_iAttributeDefinitionIndex");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& _ST_m_Attributes_32::m_iRawValue32( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_iRawValue32");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_Attributes_32::m_flValue( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_flValue");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& _ST_m_Attributes_32::m_iRawInitialValue32( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_iRawInitialValue32");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& _ST_m_Attributes_32::m_nRefundableCurrency( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_nRefundableCurrency");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

bool& _ST_m_Attributes_32::m_bSetBonus( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_Attributes_32", "m_bSetBonus");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

