int& _ST_m_AnimOverlay_15::m_nSequence( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_nSequence");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_AnimOverlay_15::m_flCycle( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_flCycle");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_AnimOverlay_15::m_flPlaybackRate( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_flPlaybackRate");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_AnimOverlay_15::m_flPrevCycle( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_flPrevCycle");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_AnimOverlay_15::m_flWeight( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_flWeight");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

float& _ST_m_AnimOverlay_15::m_flWeightDeltaRate( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_flWeightDeltaRate");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

int& _ST_m_AnimOverlay_15::m_nOrder( )
{
	static const auto offset = cheat::get_netvar_offset("_ST_m_AnimOverlay_15", "m_nOrder");
	auto addr = nstd::mem::address(this).add(offset);
	return addr.ref( );
}

