#include "C_FuncRotating.h"
#include "cheat/netvars/netvars.h"
#include <nstd/address.h>

#include "cheat/csgo/QAngle.hpp"
#include "cheat/csgo/Vector.hpp"

using namespace cheat::csgo;

cheat::csgo::Vector& C_FuncRotating::m_vecOrigin( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncRotating", "m_vecOrigin");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
}
cheat::csgo::QAngle& C_FuncRotating::m_angRotation( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncRotating", "m_angRotation");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::QAngle>( );
}
float& C_FuncRotating::m_flSimulationTime( )
{
	static const auto offset = netvars::get_ptr( )->at("C_FuncRotating", "m_flSimulationTime");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
}
