#include "C_EnvQuadraticBeam.h"
#include "cheat/netvars/netvars.h"
#include <nstd/address.h>

#include "cheat/csgo/Vector.hpp"

using namespace cheat::csgo;

cheat::csgo::Vector& C_EnvQuadraticBeam::m_targetPosition( )
{
	static const auto offset = netvars::get( )->at("C_EnvQuadraticBeam", "m_targetPosition");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
}
cheat::csgo::Vector& C_EnvQuadraticBeam::m_controlPosition( )
{
	static const auto offset = netvars::get( )->at("C_EnvQuadraticBeam", "m_controlPosition");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
}
float& C_EnvQuadraticBeam::m_scrollRate( )
{
	static const auto offset = netvars::get( )->at("C_EnvQuadraticBeam", "m_scrollRate");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
}
float& C_EnvQuadraticBeam::m_flWidth( )
{
	static const auto offset = netvars::get( )->at("C_EnvQuadraticBeam", "m_flWidth");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
}
