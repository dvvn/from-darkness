#include "C_TESmoke.h"
#include "cheat/netvars/netvars.h"
#include <nstd/address.h>

#include "cheat/csgo/Vector.hpp"

using namespace cheat::csgo;

cheat::csgo::Vector& C_TESmoke::m_vecOrigin( )
{
	static const auto offset = netvars::get_ptr( )->at("C_TESmoke", "m_vecOrigin");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<cheat::csgo::Vector>( );
}
int& C_TESmoke::m_nModelIndex( )
{
	static const auto offset = netvars::get_ptr( )->at("C_TESmoke", "m_nModelIndex");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<int>( );
}
float& C_TESmoke::m_fScale( )
{
	static const auto offset = netvars::get_ptr( )->at("C_TESmoke", "m_fScale");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<float>( );
}
int& C_TESmoke::m_nFrameRate( )
{
	static const auto offset = netvars::get_ptr( )->at("C_TESmoke", "m_nFrameRate");
	auto addr = nstd::address(this).add(offset);
	return addr.ref<int>( );
}
